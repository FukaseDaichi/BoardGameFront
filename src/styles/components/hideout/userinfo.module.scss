@import "../../variables";
// ハイドアウトユーザ
div.main {
  position: relative;
  margin: 1em 1em 1.5em 1em;
  padding: 1em 1em;
  box-sizing: border-box;
  background-color: #fff; /* 背景色 */
  border: 4px solid; /*線の太さ・色*/
  border-radius: 3em 0.8em 3em 0.7em/0.9em 2em 0.8em 3em;
  box-shadow: 5px 4px 10px 3px rgb(0 0 0 / 60%);
  width: 220px;

  @include mq(md) {
    padding: 1em 0.4em;
    margin: 1em 1em 1.5em 0.5em;
    width: calc(50% - 2em);
  }

  span.you {
    position: absolute;
    font-family: "Patrick Hand SC", cursive;
    top: 5px;
    font-size: 1.5rem;
    font-weight: 600;

    @include mq(md) {
      font-size: 1.2rem;
    }
  }

  div.icon {
    position: relative;
    width: 100%;
    height: 50px;
    top: -55px;

    div.imgdiv {
      margin: 0 auto;
      width: 80px;
      border-radius: 50%;
      overflow: hidden;
      box-shadow: 5px 4px 10px 3px rgba(0, 0, 0, 0.6);
      z-index: 2;

      @include mq(md) {
        width: 65px;
      }
      img {
        width: 100%;
      }
    }

    div.content {
      width: 100%;
      text-align: center;
      margin-top: 3px;
      div.text {
        white-space: nowrap;
        overflow: hidden;
        label {
          font-size: 1rem;
          font-weight: 600;
          color: #252525;
          text-shadow: 0 0 1px #ffffff;
          @include mq(md) {
            font-size: 0.8rem;
          }
        }
      }
      div.btnarea {
        position: absolute;
        right: 0px;
        top: 40px;
        div.btn {
          $background: #4f8f6e;
          border-radius: 50%;
          $white: #ffffff;
          $transformValue: 32%;
          width: 30px;
          position: relative;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          margin: auto;
          display: flex;
          justify-content: center;
          align-items: center;
          box-shadow: 3px 2px 5px 1px rgba(0, 0, 0, 0.6);

          input[type="checkbox"] {
            display: none;
          }

          .hamberger {
            height: 20px;
            width: 20px;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            &:hover {
              cursor: pointer;
            }
            span {
              display: inline-flex;
              height: 2px;
              position: relative;
              &::before,
              &::after {
                content: "";
                position: absolute;
                height: 100%;
                width: 50%;
                top: 7.5px;
                bottom: 0;
                margin: auto;
                transition: all ease 0.25s;
                background-color: $white;
              }
              &::before {
                left: 0;
                transform-origin: left;
                border-top-left-radius: 4px;
                border-bottom-left-radius: 4px;
              }
              &::after {
                right: 0;
                transform-origin: right;
                border-top-right-radius: 4px;
                border-bottom-right-radius: 4px;
              }
            }

            span:nth-child(2) {
              &::before,
              &::after {
                width: 100%;
                border-radius: 4px;
                left: 0;
                right: 0;
              }
            }
          }

          input[type="checkbox"]:checked {
            & + label {
              .hamberger {
                span:nth-child(1) {
                  &::before {
                    transform: translateX($transformValue) rotate(45deg);
                  }
                  &::after {
                    transform: translateX($transformValue * -1) rotate(-45deg);
                  }
                }
                span:nth-child(2) {
                  &::before,
                  &::after {
                    width: 0;
                  }
                }

                span:nth-child(3) {
                  &::before {
                    transform: translateX($transformValue) rotate(-45deg);
                  }
                  &::after {
                    transform: translateX($transformValue * -1) rotate(45deg);
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  div.card {
    position: absolute;
    z-index: 3;
    width: 350px;
    overflow: hidden;
    border-radius: 5px;
    animation: SlideIn 0.4s;
    @include mq(md) {
      width: 300px;
    }

    &.even {
      @include mq(md) {
        left: -165px;
      }
    }

    div.card-roll {
      width: 100%;
      box-shadow: 5px 4px 10px 3px rgba(0, 0, 0, 0.6);

      img {
        width: 100%;
      }
    }

    @keyframes SlideIn {
      0% {
        opacity: 0; /*初期状態では透明に*/
        transform: scale(0) translate(0, -1000px);
      }
      100% {
        opacity: 1;
        transform: scale(1) translate(0, 0);
      }
    }
  }

  div.turn {
    position: relative;
    img {
      top: -30px;
      position: absolute;
      width: 50px;
      z-index: 1;
      animation: fwari ease-in-out 1.5s infinite alternate;
    }
    @keyframes fwari {
      0% {
        transform: translate(0%, 0%);
      }
      100% {
        transform: translate(0%, -15px);
      }
    }
  }

  div.roll {
    position: relative;
    img {
      top: 20px;
      left: 10px;
      position: absolute;
      width: 120px;
      z-index: 4;
      animation: fwari ease-in-out 1.5s infinite alternate;
    }
    @keyframes fwari {
      0% {
        transform: translate(0%, 0%);
      }
      100% {
        transform: translate(0%, -15px);
      }
    }
  }

  div.build {
    img {
      width: 100%;
    }
  }
}
